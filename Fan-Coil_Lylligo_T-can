
substitutions:
  devicename: fancoil
  description: fancoil Controller
  entity_prefix: fancoil


esphome:
  name: "${devicename}"
  comment: "${description}"
  on_boot: 
    - priority: 90
      then: 
      - output.turn_on: modbus_en # Enable, aka RE on the MAX13487E - Drive RE high to let the AutoDirection circuit control the receiver
      - output.turn_on: modbus_se # Not sleep, aka SHDN (shutdown) on the MAX13487E
      - output.turn_on: modbus_5v # Provide power to the modbus chip (MAX13487E)

esp32:
  board: esp32dev
  framework:
    type: arduino

# Enable logging
logger:
  level: VERBOSE
  baud_rate: 0

web_server:
  port: 80

# Enable Home Assistant API
api:
  encryption:
    key: "*********************************"
    
ota:

wifi:
  networks:
  - ssid: !secret wifi_ssid
    password: !secret wifi_password
  - ssid: ******************
    password: ***********************
  reboot_timeout: 0.05h


  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Fancoil_adapter"
    password: "fancoiladapter"

captive_portal:

light:
  - platform: neopixelbus
    type: GRB
    variant: WS2812
    pin: GPIO04
    num_leds: 1
    name: "Light"

# These could be implemented as inverted so they didn't need explict enablement above i.e. disabled = HIGH
output:
- platform: gpio
  pin: 17
  id: modbus_en
- platform: gpio
  pin: 19
  id: modbus_se
- platform: gpio
  pin: 16
  id: modbus_5v

uart:
  id: mod_bus
  tx_pin: 22
  rx_pin: 21
  baud_rate: 9600
  parity: NONE
  stop_bits: 1
  data_bits: 8  

modbus:
 # flow_control_pin: 17
  id: heatpump_modbus
  uart_id: mod_bus


modbus_controller:
  - id: "fancoil"
    ## the Modbus device addr
    address: 0x2
    modbus_id: heatpump_modbus
    setup_priority: -10
    update_interval: 10s  

sensor:

  # fancoil Register: 1
  - platform: fancoil_controller
    modbus_controller_id: "fancoil"
    name: "Fancoil Operational Mode"
    id: "fancoil_operational_mode"
    register_type: holding
    address: 1601
    value_type: U_WORD
  # fancoil Register: 4
  - platform: fancoil_controller
    modbus_controller_id: "fancoil"
    name: "Fancoil indoor Temp"
    id: "fancoil_indoor_temp"
    register_type: holding
    address: 1604
    value_type: U_WORD
    unit_of_measurement: "°C"
  # fancoil Register: 5
  - platform: fancoil_controller
    modbus_controller_id: "fancoil"
    name: "Fancoil CW temp"
    id: "fancoil_cw_temp"
    register_type: holding
    address: 1605
    value_type: U_WORD
    unit_of_measurement: "°C"
  # fancoil Register: 6
  - platform: fancoil_controller
    modbus_controller_id: "fancoil"
    name: "Fancoil HW temp"
    id: "fancoil_hw_temp"
    register_type: holding
    address: 1606
    value_type: U_WORD
    unit_of_measurement: "°C"
  # fancoil Register: 13
  - platform: fancoil_controller
    modbus_controller_id: "fancoil"
    name: "Fancoil water pump status"
    id: "fancoil_waterpump_status"
    register_type: holding
    address: 1613
    value_type: U_WORD       
  
